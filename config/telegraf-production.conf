# ðŸ¦… NoC Raven - Production Telegraf Configuration
# Simplified for 100% production reliability without external dependencies

[global_tags]
  environment = "production"
  service = "noc-raven"
  version = "1.0.0-production"

[agent]
  interval = "30s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "30s"
  flush_jitter = "5s"
  precision = ""
  hostname = ""
  omit_hostname = false

# =============================================================================
# INPUT PLUGINS - Production Essential Only
# =============================================================================

# System metrics
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

[[inputs.diskio]]

[[inputs.mem]]

[[inputs.system]]

# Network metrics
[[inputs.net]]
  interfaces = ["eth*", "en*"]

[[inputs.netstat]]

# NoC Raven process monitoring
[[inputs.procstat]]
  pattern = "goflow2"
  pid_tag = false
  prefix = "goflow2"

[[inputs.procstat]]
  pattern = "fluent-bit"
  pid_tag = false
  prefix = "fluent_bit"

[[inputs.procstat]]
  pattern = "vector"
  pid_tag = false
  prefix = "vector"

[[inputs.procstat]]
  pattern = "nginx"
  pid_tag = false
  prefix = "nginx"

# Port monitoring for critical telemetry services
[[inputs.net_response]]
  protocol = "tcp"
  address = "localhost:8080"
  timeout = "3s"
  tags = { service = "nginx_web" }

[[inputs.net_response]]
  protocol = "tcp"
  address = "localhost:8084"
  timeout = "3s"
  tags = { service = "vector_api" }

# Internal Telegraf metrics
[[inputs.internal]]
  collect_memstats = true

# =============================================================================
# OUTPUT PLUGINS - Local File Storage Only
# =============================================================================

# Primary file output for all metrics
[[outputs.file]]
  files = ["/data/metrics/telegraf-production-%Y-%m-%d.log"]
  data_format = "json"
  rotation_interval = "24h"
  rotation_max_size = "100MB"
  rotation_max_archives = 7

# Health monitoring output (reduced volume)
[[outputs.file]]
  files = ["/data/metrics/health-summary.log"]
  data_format = "json"
  namepass = ["*_response", "internal_*"]
  rotation_interval = "24h"
  rotation_max_size = "50MB"
  rotation_max_archives = 3
